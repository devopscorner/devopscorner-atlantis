#!/bin/bash

# Setup Basic Authentication for Atlantis Nginx
# Usage: ./setup-basic-auth.sh [username] [password]

set -e

# Default values
DEFAULT_USERNAME="atlantis"
DEFAULT_PASSWORD="atlantis123"
NGINX_AUTH_DIR="${DATA_NGINX:-/opt/data/docker/nginx}/auth"
HTPASSWD_FILE="${NGINX_AUTH_DIR}/.htpasswd"

# Get username and password from arguments or use defaults
USERNAME="${1:-$DEFAULT_USERNAME}"
PASSWORD="${2:-$DEFAULT_PASSWORD}"

echo "Setting up Basic Authentication for Atlantis..."
echo "Username: $USERNAME"

# Create auth directory if it doesn't exist
mkdir -p "$NGINX_AUTH_DIR"

# Check if htpasswd utility is available
if ! command -v htpasswd &> /dev/null; then
    echo "htpasswd utility not found. Installing apache2-utils..."

    # Detect OS and install htpasswd
    if [[ "$OSTYPE" == "linux-gnu"* ]]; then
        if command -v apt-get &> /dev/null; then
            sudo apt-get update && sudo apt-get install -y apache2-utils
        elif command -v yum &> /dev/null; then
            sudo yum install -y httpd-tools
        elif command -v dnf &> /dev/null; then
            sudo dnf install -y httpd-tools
        else
            echo "Could not install htpasswd. Please install apache2-utils or httpd-tools manually."
            exit 1
        fi
    elif [[ "$OSTYPE" == "darwin"* ]]; then
        if command -v brew &> /dev/null; then
            brew install httpd
        else
            echo "Please install httpd via Homebrew: brew install httpd"
            exit 1
        fi
    else
        echo "Unsupported OS. Please install htpasswd manually."
        exit 1
    fi
fi

# Generate htpasswd file
echo "Generating htpasswd file..."
htpasswd -cb "$HTPASSWD_FILE" "$USERNAME" "$PASSWORD"

# Set proper permissions
chmod 644 "$HTPASSWD_FILE"

echo "Basic authentication setup complete!"
echo "File created: $HTPASSWD_FILE"
echo ""
echo "To add more users, run:"
echo "htpasswd -b $HTPASSWD_FILE <username> <password>"
echo ""
echo "To verify the file contents:"
echo "cat $HTPASSWD_FILE"

# Verify the setup
if [[ -f "$HTPASSWD_FILE" ]]; then
    echo ""
    echo "Current users in htpasswd file:"
    cut -d: -f1 "$HTPASSWD_FILE"
else
    echo "Error: htpasswd file was not created successfully!"
    exit 1
fi